%section.new-thread
  %h1= t ".title", issue: @issue.title
  - if @issue.threads.count == 0
    %div.meta
      %p
        %i= simple_format t ".new_hint"
  = semantic_form_for @thread, as: :thread, url: {action: :create}, html: {class: 'guided'} do |f|
    = f.semantic_errors
    = f.inputs do
      = f.input :title
      - if @available_groups.present?
        = f.input :group,
            collection: [[t(".everyone"), nil, "data-privacy-options" => "{}"]] + @available_groups.map {|g| [g.name, g.id, "data-privacy" => g.default_thread_privacy, "data-privacy-options" => Hash[g.thread_privacy_options_map_for(current_user).map { |n,v| [v, n]}].to_json] },
            include_blank: false
        = f.input :privacy,
            as: :select,
            collection: f.object.class.privacies_map,
            input_html: {"data-autoset" => "#thread_group_id", "data-autoset-param" => "privacy", "data-auto-options" => "#thread_group_id", "data-auto-options-param" => "privacy-options"},
            wrapper_html: {class: "hide", "data-dependent" => "#thread_group_id"}
      = semantic_fields_for @message do |f2|
        = f2.semantic_errors
        = f2.input :body, input_html: { rows: 15 }
    = f.actions do
      = f.action :submit, button_html: {class: "btn-green submit"}
      = cancel_link issue_path(@issue)
