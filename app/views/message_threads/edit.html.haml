%header
  %h1= t ".title"
  - if policy(@thread).edit_all_fields?
    %p= t ".description"
    %p= t ".thread_fix_warning_html"
%section
  = semantic_form_for @thread, as: :thread, url: thread_path(@thread) do |f|
    = f.inputs do
      = f.input :title
      - if !f.object.private_message? && policy(@thread).edit_all_fields?
        = f.input :group,
            collection: [[t(".everyone"), nil, "data-privacy-options" => "{}"]] + current_user.groups_can_assign.map {|g| [g.name, g.id, "data-privacy" => g.default_thread_privacy, "data-privacy-options" => Hash[g.thread_privacy_options_map_for(current_user).map { |n,v| [v, n]}].to_json] },
            include_blank: false
        = f.input :privacy,
            as: :select,
            collection: f.object.class.privacies_map,
            input_html: {"data-autoset" => "#thread_group_id", "data-autoset-param" => "privacy", "data-auto-options" => "#thread_group_id", "data-auto-options-param" => "privacy-options"},
            wrapper_html: {class: "hide", "data-dependent" => "#thread_group_id"}
        = f.input :issue, as: :select, collection: Issue.by_most_recent.map { |iss| ["#{iss.id} - #{iss.title.truncate(70)}", iss.id] }
    = f.actions do
      = f.action :submit, button_html: {class: "btn-green submit", data: { disable_with: t("formtastic.actions.saving") }}
      = cancel_link thread_path(@thread)
