%section#content.content-no-sidebar
  .user-dashboard#dashboard-tabs
    %ul.tabs.styled-tabs.with-history
      %li= link_to t(".my_threads"), "#my-threads"
      %li= link_to t(".issues_nearby"), "#issues-nearby"
      %li= link_to t(".my_favourites"), "#my-favourites"
      %li= link_to t(".deadlines"), "#deadlines"
      %li= link_to t(".planning_applications"), "#planning-applications"

    .panes
      #my-threads
        %section.threads
          - if @subscribed_threads.empty?
            %p= t ".no_subscribed_threads_html", threads_link: link_to(t(".recent_threads"), threads_path),
                                          add_issue_link: link_to(t(".add_a_new_issue"), new_issue_path)
          - else
            %p= t(".my_threads_introduction")
            %table.dashboard-threads
              %tbody
                = render partial: 'subscribed_thread', collection: @subscribed_threads, as: :thread
        - if @subscribed_threads.respond_to?(:total_pages)
          = paginate @subscribed_threads, param_name: :subscribed_threads_page, params: {anchor: 'my-threads'}
      #issues-nearby
        %section.issues
          %h2= t ".issues_in_your_area"
          - if !current_user.location
            %p.warning
              = image_tag 'warning.png'
              = t ".no_locations_guidance_html", add_some_locations_link: link_to(t(".add_some_locations"), current_user_locations_path),
                                                  things: t(".issues_lower")
          - elsif @relevant_issues.empty?
            %p= t ".no_issues_nearby_html", add_issue_link: link_to(t(".add_a_new_issue"), new_issue_path),
                                        add_location_link: link_to(t(".add_another_location"), current_user_locations_path)
          - else
            %p= t ".my_issues_nearby_introduction_html", areas_you_are_watching_link: link_to(t(".areas_you_are_watching"), current_user_locations_path)
            %p.comment= t ".my_issues_nearby_issues_pointer_html", browse_all_other_issues_link: link_to(t(".browse_all_other_issues"), issues_path)
            %ul.issue-list
              = issues_list @relevant_issues, collapsed: true
        - if @relevant_issues.respond_to?(:total_pages)
          = paginate @relevant_issues, param_name: :relevant_issues_page, params: {anchor: 'issues-nearby'}
      #my-favourites
        %section.threads
          - if @favourite_threads.empty?
            %p= t ".no_favourite_threads_html", threads_link: link_to(t(".recent_threads"), threads_path),
                                          add_issue_link: link_to(t(".add_a_new_issue"), new_issue_path)
          - else
            %p= t ".my_favourites_introduction"
            %table.dashboard-threads
              %tbody
                - @favourite_threads.each do |thread|
                  %tr
                    %td.title
                      %h4= link_to thread.title, thread_path(thread)
                      - if thread.has_issue?
                        %p= thread.issue_link
                    %td.activity
                      = thread.latest_activity
                    %td.meta{id: "favourite-thread-#{thread.id}", style: "min-width: 225px"}
                      = render "message_thread/user_favourites/form", thread: thread, user_favourite: @user_favourites.find { |up| up.thread_id == thread.id}, collection_type: :select, cached: true
        - if @favourite_threads.respond_to?(:total_pages)
          = paginate @favourite_threads, param_name: :favourited_threads_page, params: {anchor: 'my-favourites'}
      #deadlines
        %section.threads
          %p(style="float: right;")= link_to image_tag("ical.gif"), "#{dashboard_path}/#{current_user.public_token}/deadlines.ics"
          - if @deadline_threads.empty?
            %p= t ".no_upcoming_deadline_threads"
          - else
            %p= t ".my_upcoming_deadline_introduction"
            %table.dashboard-threads
              %tbody
                - @deadline_threads.each do |thread|
                  %tr
                    %td.title
                      %h4= link_to thread.title, thread_path(thread)
                      - if thread.has_issue?
                        %p= thread.issue_link
                    %td.activity
                      %ul.content-icon-list
                        - thread.upcoming_deadline_messages.each do |message|
                          %li.cal
                            - deadline_message = message.deadline_messages.first
                            - deadline = deadline_message.formatted_deadline
                            %h4= link_to(l(deadline, format: :long_deadline), thread_path(thread, anchor: dom_id(message)))
                            %p= deadline_message.title
                            = render partial: "shared/deadline", locals: {deadline: deadline}
                    %td.meta
                      = t ".deadline_thread_updated"
                      = time_tag_with_title(thread.latest_activity_date)
      #planning-applications
        %section.planning_applications
          %h2= t ".planning_applications_in_your_area"
          %br
          = form_tag(search_planning_applications_path, {method: :get, class: "filters"}) do
            = text_field_tag :q, params[:q], placeholder: t(".planning_applications_search")
            = button_tag t(".planning_application_search_button")
            %br
            %br

          - if !current_user.location
            %p.warning
              = image_tag 'warning.png'
              = t ".no_locations_guidance_html", add_some_locations_link: link_to(t(".add_some_locations"), current_user_locations_path),
                                                  things: t(".planning_applications_lower")
          - elsif @planning_applications.empty?
            %p= t ".no_planning_applications_nearby_html", add_location_link: link_to(t(".add_another_location"), current_user_locations_path)
          - else
            %p= t ".planning_applications_introduction_html", location_link: link_to(t(".location"), current_user_locations_path)

            - if @planning_applications.object.respond_to?(:total_pages)
              = paginate @planning_applications, param_name: :planning_page, params: {anchor: 'planning-applications'}
            %br
            %br

            %table.dashboard-planning-applications.listing
              %thead
                %tr
                  %th= t('.map')
                  %th
                  %th= PlanningApplication.human_attribute_name(:authority_name)
                  %th= PlanningApplication.human_attribute_name(:description)
                  %th= "#{PlanningApplication.human_attribute_name(:uid)} & #{PlanningApplication.human_attribute_name(:url)}"
              %tbody
                = render partial: 'planning_applications/planning_application', collection: @planning_applications, as: :planning_application, cached: true

        - if @planning_applications.respond_to?(:total_pages)
          = paginate @planning_applications, param_name: :planning_page, params: {anchor: 'planning-applications'}
