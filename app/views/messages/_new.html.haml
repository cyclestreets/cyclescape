%section.new-message#new-message
  %p.label
    = t ".select_header"
  %ul.tabs.styled-tabs
    %li.compose-new
      = link_to "#compose-new" do
        %span
          = t ".compose_new"
    %li.from-library
      = link_to "#from-library" do
        %span
          = t ".from_library"
  .panes
    #compose-new.pane
      %ul.tabs
        %li.text
          = link_to "#new-text-message" do
            = t ".text_message"
            %span.nub
        %li.image
          = link_to "#new-photo-message" do
            = t ".photo_message"
            %span.nub
        %li.image
          = link_to "#new-cyclestreets-photo-message" do
            = t ".cyclestreets_photo_message"
            %span.nub
        %li.map-point
          = link_to "#new-street-view-message" do
            = t ".street_view_message"
            %span.nub
        %li.map-point
          = link_to "#new-map-message" do
            = t ".map_message"
            %span.nub
        %li.text
          = link_to "#new-poll-message" do
            = "Poll"
            %span.nub
        %p.clear
        %li.link
          = link_to "#new-link-message" do
            = t ".link_message"
            %span.nub
        %li.cal
          = link_to "#new-deadline-message" do
            = t ".deadline_message"
            %span.nub
        %li.doc
          = link_to "#new-document-message" do
            = t ".document_message"
            %span.nub
        %li.text
          = link_to "#new-action-message" do
            = t ".action_message"
            %span.nub
        - if signed_in? && current_user.subscribed_to_thread?(@thread)
          %li.text
            = link_to "#new-thread-leader-message" do
              = t ".thread_leader_message"
              %span.nub
      - unless current_user
        .access-denied= t(".sign_in_to_post_html", sign_in_link: link_to_sign_in)
      - else
        - message = @thread.messages.build
        - opts = { html: { class: "navigate-away-warning" } }
        = semantic_form_for message, opts.merge(url: thread_messages_path(@thread)) do |f|
          - form_options = { message_form: f, message: message }
          = f.inputs do
            .panes
              #new-text-message.pane
                = f.input :body, input_html: { class: 'autosize tinymce'}
              - if signed_in?
                = render "message/photos/new", form_options
                = render "message/cyclestreets_photos/new", form_options
                = render "message/street_views/new", form_options
                = render "message/links/new", form_options
                = render "message/deadlines/new", form_options
                = render "message/documents/new", form_options
                = render "message/maps/new", form_options
                = render "message/actions/new", form_options
                = render "message/polls/new", form_options
                - if current_user.subscribed_to_thread?(@thread)
                  = render "message/thread_leaders/new", form_options
              #action-messages
                = render "shared/actions", f: f, thread: @thread
            = f.actions do
              = f.action :submit, button_html: message_button_html

      - if current_user && @thread.latest_message
        %p
          = t '.reply_by'
          = email_message @thread.latest_message
    #from-library.pane
      .scrollable
        %div
          .listing
            = form_tag search_library_path, {method: :get, class: "library-search filters", target: "#library-results", remote: true} do
              .search-box
                = label_tag :query, t(".search_library")
                = text_field_tag :query, nil, placeholder: t(".search_library")
              %button{type: "submit"}
                = t ".go"
              %span.nub
            .library-content#library-search
              .library-items#library-relevant{"data-src" => relevant_library_path(thread_id: @thread.id)}
                %ul.content-icon-list(data-bind="template: {name: 'library-item-template', foreach: initial_items() }")
              .library-results.hide#library-results
                %h3
                  = t ".search_results"
                %ul.content-icon-list(data-bind="template: {name: 'library-item-template', foreach: search_results() }")

        %div
          #add-library-item
            %h2
              = t ".add_item_to_thread"
            %a.prev.btn-grey
              = t ".back"
            .library-content(data-bind="template: {name: 'library-item-selected', foreach: selected()}")

  - if policy(@thread).close?
    .pull-right= button_to t(".close"), close_thread_path(@thread), method: :put, class: 'btn-green part-hidden', data: { confirm: t("are_you_sure") }

// Template for library items
%script(type="text/html" id="library-item-template")
  %li(data-bind="attr: {'class': item_type}")
    .item-content
      %h4(data-bind="html: link")
      %p.meta(data-bind="text: description")
    %a.select.btn-green(href="#")
      = t ".select_button"

%script(type="text/html" id="library-item-selected")
  = semantic_form_for LibraryItemMessage.new, url: thread_library_items_path(@thread) do |f|
    = f.inputs do
      = f.input :library_item_id, as: :hidden, input_html: {"data-bind" => "value: id"}
      = semantic_fields_for Message.new do |f2|
        = f2.input :body, input_html: {placeholder: t(".explain_library_item")}
    .library-item
      %span(data-bind="attr: {class: item_type}")
      .item-content
        %h3(data-bind="text: title")
        %p(data-bind="text: description")
      .item-meta.hide
        %a.btn-grey{:href => "#"}
          = t ".view_document"
        %p PDF [35kb]
    %input.a.select.btn-green(type="submit" value="#{t ".add_to_thread"}")
