%article.issue#content.content-wide-sidebar
  %header
    %h1= @issue.title
    - if permitted_to? [:edit, :destroy], @issue
      %menu.tools
        %ul
          - if permitted_to?(:edit, @issue)
            %li= link_to t(".edit_issue"), edit_issue_path(@issue)
          - if permitted_to?(:destroy, @issue)
            %li= link_to t(".delete_issue"), issue_path(@issue), data: { confirm: t("are_you_sure") }, method: :delete
  .main
    %section.voting
      =render partial: "shared/votable",
        locals: { resource: @issue.object }
    %section.meta
      %p
      - if permitted_to? :view_profile, @issue.created_by
        - profile_link = link_to_profile @issue.created_by
      - else
        - profile_link = @issue.created_by.display_name_or_anon
      = t ".added_by_html", name: profile_link, time: formatted_created_at(@issue)
    %section.tags
      = @tag_panel.render
    %section.description
      = @issue.description
    - if @issue.deadline
      %section.deadline
        %h3= t ".deadline"
        = @issue.formatted_deadline.to_formatted_s(:long_ordinal)
        = render partial: "shared/deadline", locals: {deadline: @issue.deadline}
    - if @issue.external_url
      %section.external_url
        = link_to @issue.external_url, @issue.external_url

  %section.map
    %h2= t ".location"
    .pull-right
      = check_box_tag('collisions')
      = label_tag 'collisions', t('.show_collisions')
      = check_box_tag('photos')
      = label_tag 'photos', t('.show_photos')
    %div{id: 'map'}
    .hidden
      .map-data{"data-center" => location_to_geojson(@issue.location),
        "data-opts" => { collisions: true, feature: item_to_geojson(@issue), photos: true }.to_json}

    = link_to t(".issues-nearby"), issues_path(anchor: 'map-pane', issue_id: @issue.id), class: "btn-green"

%aside#sidebar.wide
  - if permitted_to? :create, :issue_message_threads
    = link_to t(".new_thread", count: @issue.threads.count), new_issue_thread_path(@issue), class: "btn-green", rel: "#overlay"
  - if current_user and current_user.groups.present?
    - if ExternalService.all.present?
      - if permitted_to? :create, :issue_message_threads
        = link_to t(".new_send_thread", count: @issue.threads.count), issue_threads_new_external_path(@issue), class: "btn-green", rel: "#overlay"
  %section.social
    = tweet_button text: @issue.title, link: issue_url(@issue)
    = facebook_like issue_url(@issue)

  %section.threads
    %header
      %h2= t ".threads"
      - if @threads.empty?
        %p= t ".no_threads_yet"
        - unless current_user
          %p= t ".sign_in_to_discuss_html", sign_in_link: link_to(t(".sign_in"), new_user_session_path)
      - else
        %ul.sidebar-threadlist
          = render partial: "message_threads/compact", collection: @threads, as: :thread
  - if @issue.photo
    %section.photos.issue-photo
      = link_to issue_photo_path(@issue), rel: "#overlay" do
        = image_tag @issue.photo_sidebar.url

:javascript
  $( document ).ready(function() {
    var updateMap = function (mapEl, checkboxEl) {
      mapEl.change(function() {
        checkboxEl.prop('checked', this.checked);
      });
      checkboxEl.change(function() {
        mapEl.click();
      });
    };
    var layers = [{ map: $("span:contains('Collisions')").prev(), checkbox: $('#collisions') },
                  { map: $("span:contains('Photos')").prev(), checkbox: $('#photos') }];

    for ( var i = 0; i < layers.length; i++) {
      updateMap(layers[i].map, layers[i].checkbox);
    }
  })
